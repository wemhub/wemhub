
   WEM PROJECT
  www.wemhub.com

 /// API DOC ///
 Last update: September 28, 2021
 Ver: 1.0
 
=====================================
   <<< INTRODUCTION >>>
=====================================

The WEM API will allow you to send & receive WEM, query JSON data on nodes and transactions, and get information regarding the WEM Network. Almost all functionality and data you see on this website is available through API calls.


=====================================
   <<< Simple Lookups >>>
=====================================


   # Exchange Rate

https://wemhub.com/api/wem_get_price_rate

 <!-- Response -->

{"status":"success","wem_in_usd":"0.989898989"}



   # WEM Count

https://wemhub.com/api/wem_GetWEMCount_total


 <!-- Response -->

{"status":"success","TotalWalletsSUM":"1,075,418.153305021","TotalCIDsSum":"0.000000000","TotalWEMsSum":"1,075,418.153305021"}

"TotalWalletsSUM": Total balance available at Node's Wallets and Paper Wallets.
"TotalCIDsSum": Total amount active smart contracts at WEM network.
"TotalWEMsSum": Total amount of WEMs generated by WEM network.



   # Generate Paper Wallet


https://wemhub.com/api/wem_generate_PaperWallet



   # Get Country Code

https://wemhub.com/api/get_country



=====================================
   <<< GET/POST cURL Lookups >>>
=====================================


   ## Generate Node

 <!-- Request -->

curl -X POST https://wemhub.com/api/regit
   -H 'Content-Type: application/json'
   -d '{"pin":"123456","sponsornode":"016-000-0000-501", "country":"840"}'

"pin": Your 6 digit Numeric PIN - Example: 123456
"sponsornode": Your Sponsor Node Account Number - Example: 000-000-0000-000
"country":"Country code for Account number" <!-- Get Country code by https://wemhub.com/api/get_country --> 


 <!-- Response -->

{
    "success": "true",
    "Account No.": "000-000-0000-000",
    "Private key": "b7cad3ad374f2a9b750651449dd2268045ee295f30beada07856fc89ca584a6a",
    "PassPhrase": "terrorful fossilological numerant gurdy raven tinctorious cryptoproselyte convictional procursive overagitating microbarograph cunjer",
    "PPubHash": "ef5386d1d86b8c2c65a1db0b2d7e8a5582ab723f0cdecf0220df192ed5a347ed",
    "StringHash": "e464j5a4x214235413h564w22434z2t2f48454j5r2c444a4w2s2p2i5z2z2f4a4c4x2f4c453v2k5b403x2l5d4g57414b4v274b4y27454a4e4235494i584a4b4e40566d4a4w2y3u2s2u20464v21434o2r263z2w48674e4t28403w25424741333a4437484k51303g564d47444k544m5v2d4w2h59413b4r2g5k50374y2j534b4d4n5b4k55484y214a4a4v2c484c4h58444t2131394k5"
}



   ## Get Node Summary by Private Key

 <!-- Request -->

curl -X POST https://wemhub.com/api/wem_get_node_summary
   -H 'Content-Type: application/json'
   -d '{"private_key":"f29abf5f72fd0bf297d5823c77e52082d1625680535da1ed1f13ddfae87a06b1"}'


"private_key": Node Private Key


 <!-- Response -->

{
    "status": "success",
    "balance": "24,562.407311451",
    "total_deposit": "0.000000000",
    "total_withdrawn": "0.000000000",
    "total_transfers": 0,
    "total_contracts": 3,
    "balance_in_contracts": "0.000000000",
    "total_referrals": 2
}



   ## Get Transaction Summary by Transaction ID

 <!-- Request -->


curl -X POST https://wemhub.com/api/wem_get_transaction_summary
   -H 'Content-Type: application/json'
   -d '{"transactionid":"61276d9cd702746a90b8e9f67f3bd8267ac6ed3c"}'

"transactionid": WEM Transaction ID


 <!-- Response -->

{
    "status": "success",
    "data": {
        "_transaction_height": "000150",
        "_timestamp": "20210928150549",
        "_transaction_id": "61276d9cd702746a90b8e9f67f3bd8267ac6ed3c",
        "_account_out": "840-000-0000-135",
        "_account_in": "777-000-0000-488, 777-000-0000-467",
        "_amount": "1.123456789",
        "_fee": "0.002246914",
        "_total_amount": "1.125703703",
        "_description": "Internal Transfer",
        "_transaction_type": "0x003, 0x010",
        "_wem_pp": "1.028837442"
    }
}





   ## Get NODEs/Contracts Balance


 <!-- Request -->

curl -X POST https://wemhub.com/api/wem_get_node_balance
   -H 'Content-Type: application/json'
   -d '{"accountno":"CID-000-0000-000"}'

"accountno": Node Account No., Paper Wallet No., CID or Contract ID


 <!-- Response -->


{
    "status": "success",
    "balance": "1.123456789"
}



  ## Generate Paper Wallet


 <!-- Request -->

curl -X POST https://wemhub.com/api/wem_generate_PaperWallet
   -H 'Content-Type: application/json'
   -d '{"private_key":"Private Key","amount":"1.123456789"}'

"private_key": Private key of the Node or Paper Wallet that requested amount should be deducted.
"amount": Requested amount.

NOTE: Generate wallet with 0 balance

 <!--Request-->

curl -X POST https://wemhub.com/api/wem_generate_PaperWallet
   -H 'Content-Type: application/json'


 <!-- Response -->


{
    "success": "true",
    "Account No.": "777-000-0000-483",
    "PrivateKey": "a3c9cda4e546066fd46e603ca92440a5a3d004df37a528f51527945a08c9aacd",
    "Balance": "0.123456789"
}



  ## Generate Smart Contract


 <!-- Request -->

curl -X POST https://wemhub.com/api/wem_contract
   -H 'Content-Type: application/json'
   -d '{"amount":"100.123456789","account":"840-000-0000-308", "private_key":"16288384543461994bb4ddd65f48050d563d97dff55114b6e572bdb9820c70f1", "contract":"CID-658-383-9912"}'


"amount": The amount needs to be assigned to the Smart contract.
"account": The Node needs to be assigned to the Smart Contract.
"private_key": Private key of the Node that amount needs to be withdrawn.
"contract": The CID that needs to transfer amount to.


 <!-- Response -->

{
    "status": "success",
    "CID": "CID-658-383-9912",
    "ContractID": "CID-361-311-5217",
    "plan_type": "Plan Type : Hourly"
}

"CID": The main Smart Contract ID
"ContractID": The sub Smart Contract under the CID.
"plan_type": The investiture plan term.
